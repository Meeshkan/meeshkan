# This is a basic workflow to help you get started with Actions

name: Meeshkan tests

# Controls when the action will run.
on: push

jobs:
  wait-for-vercel-deployment:
    runs-on: ubuntu-18.04
    steps:
      - name: Get branch name
        id: branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      - name: Get deploy url
        id: url
        run: echo webapp-git-${{ steps.branch.outputs.branch }}-meeshkanml.vercel.app
      - uses: UnlyEd/github-action-await-vercel@v1.1.0
        id: await-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: webapp-git-${{ steps.branch.outputs.branch }}-meeshkanml.vercel.app
          timeout: 180 # Wait for 3 minutes before failing
      - name: Display deployment status
        run: 'echo The deployment at ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).url }} is ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).readyState }}'

  run-jest-puppeteer-tests:
    name: Run the jest-puppeteer tests generated by Meeshkan
    runs-on: ubuntu-18.04
    needs: wait-for-vercel-deployment
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        env:
          COOKIE: ${{ secrets.COOKIE }}
        with:
          node-version: '14'

      - name: Get branch name
        id: branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      - name: Declare test url
        run: echo "TEST_URL=webapp-git-${{ steps.branch.outputs.branch }}-meeshkanml.vercel.app" >> $GITHUB_ENV

      - name: Install nx globally
        run: yarn global add nx

      # `--prefer-offline` gives cache priority
      - name: Install dependencies
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Run tests
        run: yarn test webapp --skip-nx-cache
